security:
    enable_authenticator_manager: true
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        refresh:
            pattern:  ^/api/token/refresh
            stateless: true
        swagger:
            pattern: ^/api/doc
            stateless: true
        register:
            pattern: ^/api/user
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    access_control:
        - { path: ^/api/user, methods: [POST], roles: [PUBLIC_ACCESS] }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        - { path: ^/api/token/refresh, roles: PUBLIC_ACCESS}
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }